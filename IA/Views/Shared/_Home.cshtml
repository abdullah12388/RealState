@model IA.Models.users


@{Html.RenderPartial("Head");}


    @RenderBody()
        
@{Html.RenderPartial("Footer");}
@if (Session["ID"] == null)
{
    <div class="main-popup">
        <div class="popup-header">
            <div id="popup-close-button"><a href="#"></a></div>
            <ul>
                <li><a href="#" id="sign-in">Sign In</a></li>
                <li><a href="#" id="register">Register</a></li>
            </ul>
        </div>
        <div class="popup-content">

            @using (Html.BeginForm("Login", "Home", FormMethod.Post, new { @class = "sign-in", role = "form" }))
            {
                if (TempData["Message"] != null)
                {

                    <span style="color:red;padding-left:20px;display:block">@TempData["Message"].ToString()</span>
                }
                @Html.Label("email-register", "Email:")
                @Html.TextBoxFor(x => x.email, new { required = "required" })
                @Html.Label("password-register", "Password:")
                @Html.TextBoxFor(x => x.password, new { @class = "form-control", placeholder = "Password", @type = "password", required = "required" })
                <input type="submit" id="submit" value="Login">
            }

            @using (Html.BeginForm("Register", "Home", FormMethod.Post, new { @class = "register", role = "form" , enctype = "multipart/form-data" }))
            {
                @Html.Label("first_name", "First Name:")
                @Html.TextBoxFor(x => x.firstName, new { required = "required", @maxlength = "50"})
                @Html.ValidationMessageFor(x=>x.firstName);

                @Html.Label("last_name", "Last Name:")
                @Html.TextBoxFor(x => x.lastName, new { required = "required", maxlength = "50" })
                @Html.ValidationMessageFor(x => x.lastName);

                if (TempData["email"] != null)
                {
                    <span style="color:red;padding-left:20px;display:block">@TempData["email"].ToString()</span>
                }

                @Html.Label("email-register", "Email:")
                @Html.TextBoxFor(x => x.email, new { required = "required", @type = "email"})
                @Html.ValidationMessageFor(x => x.email);

                @Html.Label("password-register", "Password:")
                @Html.TextBoxFor(x => x.password, new { required = "required", @type = "password" })
                @Html.ValidationMessageFor(x => x.password);

                @Html.Label("password-confirmation", "Confirm Password:")
                @Html.TextBoxFor(x => x.ConfirmPassowrd, new { required = "required", @type = "password" })
                @Html.ValidationMessageFor(x => x.ConfirmPassowrd);

                @Html.Label("t", "Role:")

                    
                <select name="type">
                    <!--<option disabled selected>Select Your Role</option>-->
                    @foreach (var item in ViewBag.User_Types)
                    {
                        <option value="@item.userTypeId">@item.type</option>


                    }
                </select>

                @Html.Label("address", "Address:")
                @Html.TextBoxFor(x => x.address, new {  maxlength = "50" })
                @Html.ValidationMessageFor(x => x.address);

                @Html.Label("phone-number", "Phone Number:")
                @Html.TextBoxFor(x => x.phone, new {  maxlength = "50" ,@type="tel" })

                @Html.Label("jop-description", "Jop Description:")
                @Html.TextBoxFor(x => x.jobDescription , new {  maxlength = "50" })

                @*@Html.Label("qualification", "Qualification:")
                @Html.TextBoxFor(x => x.qualification , new { maxlength = "50" })


                @Html.Label("exprience", "Exprience:")
                @Html.TextBoxFor(x => x.experience , new {  maxlength = "50" })*@
                    
                @Html.Label("photoFile", "Photo:")
                <input type="file" name="photoFile" required />


                <input type="submit" id="submit" value="Create Account">
            }
        </div>

    </div>
}
    






        
        

